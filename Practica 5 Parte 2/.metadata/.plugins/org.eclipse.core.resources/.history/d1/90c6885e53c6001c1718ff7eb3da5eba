package ar.edu.unlp.info.oo2.facturacion_llamadas;

import java.util.ArrayList;
import java.util.List;
import java.util.stream.Collectors;

public class Persoonal {
	
	List<Persona> listaPersonas = new ArrayList<Persona>();
	List<Llamada> listaLlamada = new ArrayList<Llamada>();
	public GuiaTelefonica listaGuiaTelefonica = new GuiaTelefonica();
	
	public Persona registrarUsuario(String data, String nombre, String tipoPersona) {
		Persona persona = creacionTipoPersona(data, nombre, tipoPersona);
		persona.sistema = this;
		listaPersonas.add(persona);
		return persona;
		
	}


	private Persona creacionTipoPersona(String data, String nombre, String tipoPersona) {
		
		if (tipoPersona.equals("fisica")){
			String tel = listaGuiaTelefonica.obtenerNuevoNumero();
			PersonaFisica persona = new PersonaFisica(nombre,tel,data);
		}
		else if (tipoPersona.equals("juridica")) {
			String tel = listaGuiaTelefonica.guia.last();
			listaGuiaTelefonica.guia.remove(tel);
			PersonaJuridica persona = new PersonaJuridica(nombre,tel,data);
		}
		return persona;
	}
	
	
	public boolean eliminarUsuario(Persona p) {
		if(listaPersonas.removeIf(elemento -> elemento.equals(p))) {;
			this.listaGuiaTelefonica.agregarTelefono(p.getTel());
			return true;
		}
		return false;
	}
	
	public Llamada registrarLlamada(Persona q, Persona q2, String t, int d) {
		Llamada x = new Llamada();
		x.tipoDeLlamada = t;
		x.setEmisor(q.tel);
		x.setRemitente(q2.getTel());
		x.dur= d;
		listaLlamada.add(x);
		q.lista1.add(x);
		return x;
		
	}
	
	public double calcularMontoTotalLlamadas(Persona p) {
		double c = 0;
		Persona aux = null;
		for (Persona pp : listaPersonas) {
			if (pp.tel == p.getTel()) {
				aux = pp;
				break;
			}
		} if (aux == null) return c;
		if (aux != null) {
			for (Llamada l : aux.lista1) {
				double auxc = 0;
				if (l.tipoDeLlamada == "nacional") {
					auxc += l.dur *3 + (l.dur*3*0.21);
				} else if (l.tipoDeLlamada == "internacional") {
					auxc += l.dur *200 + (l.dur*200*0.21);
				}
				
				if (aux.getT() == "fisica") {
					auxc -= auxc*descuentoFis;
				} else if(aux.t == "juridica") {
					auxc -= auxc*descuentoJur;
				}
				c += auxc;
			}
		}
		return c;
	}

	public int cantidadDeUsuarios() {
		return listaPersonas.size();
	}

	public boolean existeUsuario(Persona persona) {
		return listaPersonas.contains(persona);
	}
	
}
